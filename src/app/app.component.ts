import { Component, OnInit, VERSION } from '@angular/core';
// import { data } from './data.constant';
import * as XLSX from 'xlsx';

@Component({
  selector: 'my-app',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css'],
})
export class AppComponent implements OnInit {
  name = 'Angular ' + VERSION.major;
  xml: any = [];
  start: string;
  voucherEnd: string;
  end: string;
  totalRecords: number;
  type: number[] = [18, 12, 5, 0];

  ngOnInit() {
    this.initialize();
  }

  prepareData(data: any) {
    this.xml.push(this.start);

    for (let i = 0; i < data.length; i++) {
      const item = data[i];
      this.prepareVoucher(item);
      this.ledgerEntries(item.DESCRIPTION.trim(), item['AMOUNT'], true);

      // this loop for only ledger entries
      for (let j = 0; j < this.type.length; j++) {
        const purc = 'PURCHASE ' + this.type[j] + '%';
        const tax = 'TAX ' + this.type[j] + '%';

        if (item[purc]) {
          if (this.type[j] === 0) {
            this.ledgerEntries('PURCHASE EXEMPTED', -item[purc]);
          } else {
            this.ledgerEntries(purc, -item[purc]);
            const taxPercent = this.type[j] / 2 + '%';
            const taxValue = item[tax] / 2;
            this.ledgerEntries('CGST ' + taxPercent, -taxValue);
            this.ledgerEntries('SGST ' + taxPercent, -taxValue);
          }
        }
      }
      this.ledgerEntries('R/O', item['RO']);
      this.xml.push(this.voucherEnd);
    }
    this.xml.push(this.end);
  }

  prepareVoucher(data: any) {
    const entry = `  <TALLYMESSAGE xmlns:UDF="TallyUDF"> <VOUCHER VCHTYPE='Purchase' ACTION='Create' OBJVIEW='Invoice Voucher View'>
    <BASICBUYERADDRESS.LIST TYPE='String'>
    <BASICBUYERADDRESS>Sarai Kothiwalan</BASICBUYERADDRESS>
    <BASICBUYERADDRESS>Moradabad</BASICBUYERADDRESS>
   </BASICBUYERADDRESS.LIST>
    <OLDAUDITENTRYIDS.LIST TYPE='Number'>
    <OLDAUDITENTRYIDS>-1</OLDAUDITENTRYIDS>
   </OLDAUDITENTRYIDS.LIST>
   <DATE>${data.DATE}</DATE>
   <REFERENCEDATE>${data.DATE}</REFERENCEDATE>
   <GSTREGISTRATIONTYPE>Regular</GSTREGISTRATIONTYPE>
   <STATENAME>Uttar Pradesh</STATENAME>
   <COUNTRYOFRESIDENCE>India</COUNTRYOFRESIDENCE>
   <PARTYGSTIN>${data['GST NO']}</PARTYGSTIN>
   <PARTYNAME>${data.DESCRIPTION.trim()}</PARTYNAME>
   <PARTYLEDGERNAME>${data.DESCRIPTION.trim()}</PARTYLEDGERNAME>
   <VOUCHERTYPENAME>Purchase</VOUCHERTYPENAME>
   <REFERENCE>${data['BILL NO']}</REFERENCE>
   <PARTYMAILINGNAME>${data.DESCRIPTION.trim()}</PARTYMAILINGNAME>
   <PARTYPINCODE>244001</PARTYPINCODE>
   <CONSIGNEEGSTIN>09AVIPS0220R1Z3</CONSIGNEEGSTIN>
   <CONSIGNEEMAILINGNAME>Singhal Pharma</CONSIGNEEMAILINGNAME>
   <CONSIGNEESTATENAME>Uttar Pradesh</CONSIGNEESTATENAME>
   <BASICBASEPARTYNAME>${data.DESCRIPTION.trim()}</BASICBASEPARTYNAME>
   <CSTFORMISSUETYPE/>
   <CSTFORMRECVTYPE/>
   <FBTPAYMENTTYPE>Default</FBTPAYMENTTYPE>
   <PERSISTEDVIEW>Invoice Voucher View</PERSISTEDVIEW>
   <BASICBUYERSSALESTAXNO>${data['GST NO']}</BASICBUYERSSALESTAXNO>
   <CONSIGNEECOUNTRYNAME>India</CONSIGNEECOUNTRYNAME>
   <VCHGSTCLASS/>
   <VOUCHERTYPEORIGNAME>Purchase</VOUCHERTYPEORIGNAME>
   <DIFFACTUALQTY>No</DIFFACTUALQTY>
   <ISMSTFROMSYNC>No</ISMSTFROMSYNC>
   <ASORIGINAL>No</ASORIGINAL>
   <AUDITED>No</AUDITED>
   <FORJOBCOSTING>No</FORJOBCOSTING>
   <ISOPTIONAL>No</ISOPTIONAL>
   <EFFECTIVEDATE>${data.DATE}</EFFECTIVEDATE>
   <USEFOREXCISE>No</USEFOREXCISE>
   <ISFORJOBWORKIN>No</ISFORJOBWORKIN>
   <ALLOWCONSUMPTION>No</ALLOWCONSUMPTION>
   <USEFORINTEREST>No</USEFORINTEREST>
   <USEFORGAINLOSS>No</USEFORGAINLOSS>
   <USEFORGODOWNTRANSFER>No</USEFORGODOWNTRANSFER>
   <USEFORCOMPOUND>No</USEFORCOMPOUND>
   <USEFORSERVICETAX>No</USEFORSERVICETAX>
   <ISDELETED>No</ISDELETED>
   <ISONHOLD>No</ISONHOLD>
   <ISBOENOTAPPLICABLE>No</ISBOENOTAPPLICABLE>
   <ISGSTSECSEVENAPPLICABLE>No</ISGSTSECSEVENAPPLICABLE>
   <ISEXCISEVOUCHER>No</ISEXCISEVOUCHER>
   <EXCISETAXOVERRIDE>No</EXCISETAXOVERRIDE>
   <USEFORTAXUNITTRANSFER>No</USEFORTAXUNITTRANSFER>
   <IGNOREPOSVALIDATION>No</IGNOREPOSVALIDATION>
   <EXCISEOPENING>No</EXCISEOPENING>
   <USEFORFINALPRODUCTION>No</USEFORFINALPRODUCTION>
   <ISTDSOVERRIDDEN>No</ISTDSOVERRIDDEN>
   <ISTCSOVERRIDDEN>No</ISTCSOVERRIDDEN>
   <ISTDSTCSCASHVCH>No</ISTDSTCSCASHVCH>
   <INCLUDEADVPYMTVCH>No</INCLUDEADVPYMTVCH>
   <ISSUBWORKSCONTRACT>No</ISSUBWORKSCONTRACT>
   <ISVATOVERRIDDEN>No</ISVATOVERRIDDEN>
   <IGNOREORIGVCHDATE>No</IGNOREORIGVCHDATE>
   <ISVATPAIDATCUSTOMS>No</ISVATPAIDATCUSTOMS>
   <ISDECLAREDTOCUSTOMS>No</ISDECLAREDTOCUSTOMS>
   <ISSERVICETAXOVERRIDDEN>No</ISSERVICETAXOVERRIDDEN>
   <ISISDVOUCHER>No</ISISDVOUCHER>
   <ISEXCISEOVERRIDDEN>No</ISEXCISEOVERRIDDEN>
   <ISEXCISESUPPLYVCH>No</ISEXCISESUPPLYVCH>
   <ISGSTOVERRIDDEN>No</ISGSTOVERRIDDEN>
   <GSTNOTEXPORTED>No</GSTNOTEXPORTED>
   <IGNOREGSTINVALIDATION>No</IGNOREGSTINVALIDATION>
   <ISGSTREFUND>No</ISGSTREFUND>
   <OVRDNEWAYBILLAPPLICABILITY>No</OVRDNEWAYBILLAPPLICABILITY>
   <ISVATPRINCIPALACCOUNT>No</ISVATPRINCIPALACCOUNT>
   <IGNOREEINVVALIDATION>No</IGNOREEINVVALIDATION>
   <IRNJSONEXPORTED>No</IRNJSONEXPORTED>
   <IRNCANCELLED>No</IRNCANCELLED>
   <ISSHIPPINGWITHINSTATE>No</ISSHIPPINGWITHINSTATE>
   <ISOVERSEASTOURISTTRANS>No</ISOVERSEASTOURISTTRANS>
   <ISDESIGNATEDZONEPARTY>No</ISDESIGNATEDZONEPARTY>
   <ISCANCELLED>No</ISCANCELLED>
   <HASCASHFLOW>No</HASCASHFLOW>
   <ISPOSTDATED>No</ISPOSTDATED>
   <USETRACKINGNUMBER>No</USETRACKINGNUMBER>
   <ISINVOICE>Yes</ISINVOICE>
   <MFGJOURNAL>No</MFGJOURNAL>
   <HASDISCOUNTS>No</HASDISCOUNTS>
   <ASPAYSLIP>No</ASPAYSLIP>
   <ISCOSTCENTRE>No</ISCOSTCENTRE>
   <ISSTXNONREALIZEDVCH>No</ISSTXNONREALIZEDVCH>
   <ISEXCISEMANUFACTURERON>No</ISEXCISEMANUFACTURERON>
   <ISBLANKCHEQUE>No</ISBLANKCHEQUE>
   <ISVOID>No</ISVOID>
   <ORDERLINESTATUS>No</ORDERLINESTATUS>
   <VATISAGNSTCANCSALES>No</VATISAGNSTCANCSALES>
   <VATISPURCEXEMPTED>No</VATISPURCEXEMPTED>
   <ISVATRESTAXINVOICE>No</ISVATRESTAXINVOICE>
   <VATISASSESABLECALCVCH>No</VATISASSESABLECALCVCH>
   <ISVATDUTYPAID>Yes</ISVATDUTYPAID>
   <ISDELIVERYSAMEASCONSIGNEE>No</ISDELIVERYSAMEASCONSIGNEE>
   <ISDISPATCHSAMEASCONSIGNOR>No</ISDISPATCHSAMEASCONSIGNOR>
   <ISDELETEDVCHRETAINED>No</ISDELETEDVCHRETAINED>
   <CHANGEVCHMODE>No</CHANGEVCHMODE>
   <RESETIRNQRCODE>No</RESETIRNQRCODE>
   <EWAYBILLDETAILS.LIST>      </EWAYBILLDETAILS.LIST>
   <EXCLUDEDTAXATIONS.LIST>      </EXCLUDEDTAXATIONS.LIST>
   <OLDAUDITENTRIES.LIST>      </OLDAUDITENTRIES.LIST>
    <ACCOUNTAUDITENTRIES.LIST>      </ACCOUNTAUDITENTRIES.LIST>
   <AUDITENTRIES.LIST>      </AUDITENTRIES.LIST>
   <DUTYHEADDETAILS.LIST>      </DUTYHEADDETAILS.LIST>
    <ALLINVENTORYENTRIES.LIST>      </ALLINVENTORYENTRIES.LIST>
    <SUPPLEMENTARYDUTYHEADDETAILS.LIST>      </SUPPLEMENTARYDUTYHEADDETAILS.LIST>
   <EWAYBILLERRORLIST.LIST>      </EWAYBILLERRORLIST.LIST>
   <IRNERRORLIST.LIST>      </IRNERRORLIST.LIST>
   <INVOICEDELNOTES.LIST>      </INVOICEDELNOTES.LIST>
   <INVOICEORDERLIST.LIST>      </INVOICEORDERLIST.LIST>
   <INVOICEINDENTLIST.LIST>      </INVOICEINDENTLIST.LIST>
   <ATTENDANCEENTRIES.LIST>      </ATTENDANCEENTRIES.LIST>
   <ORIGINVOICEDETAILS.LIST>      </ORIGINVOICEDETAILS.LIST>
   <INVOICEEXPORTLIST.LIST>      </INVOICEEXPORTLIST.LIST>`;
    this.xml.push(entry);
  }

  ledgerEntries(desc: string, amt: number, flag: boolean = false) {
    const entry = `
    <LEDGERENTRIES.LIST>
     <OLDAUDITENTRYIDS.LIST TYPE='Number'>
      <OLDAUDITENTRYIDS>-1</OLDAUDITENTRYIDS>
     </OLDAUDITENTRYIDS.LIST>
     <LEDGERNAME>${desc}</LEDGERNAME>
     <GSTCLASS/>
     <ISDEEMEDPOSITIVE>${!flag ? 'Yes' : 'No'}</ISDEEMEDPOSITIVE>
     <LEDGERFROMITEM>No</LEDGERFROMITEM>
     <REMOVEZEROENTRIES>No</REMOVEZEROENTRIES>
     <ISPARTYLEDGER>${flag ? 'Yes' : 'No'}</ISPARTYLEDGER>
     <ISLASTDEEMEDPOSITIVE>${!flag ? 'Yes' : 'No'}</ISLASTDEEMEDPOSITIVE>
     <ISCAPVATTAXALTERED>No</ISCAPVATTAXALTERED>
     <ISCAPVATNOTCLAIMED>No</ISCAPVATNOTCLAIMED>
     <AMOUNT>${amt}</AMOUNT>
   ${flag ? '' : '<VATEXPAMOUNT>' + amt + '</VATEXPAMOUNT>'}
     <SERVICETAXDETAILS.LIST>       </SERVICETAXDETAILS.LIST>
     <BANKALLOCATIONS.LIST>       </BANKALLOCATIONS.LIST>
     <BILLALLOCATIONS.LIST>       </BILLALLOCATIONS.LIST>
       <INTERESTCOLLECTION.LIST>       </INTERESTCOLLECTION.LIST>
     <OLDAUDITENTRIES.LIST>       </OLDAUDITENTRIES.LIST>
       <ACCOUNTAUDITENTRIES.LIST>       </ACCOUNTAUDITENTRIES.LIST>
     <AUDITENTRIES.LIST>       </AUDITENTRIES.LIST>
     <INPUTCRALLOCS.LIST>       </INPUTCRALLOCS.LIST>
     <DUTYHEADDETAILS.LIST>       </DUTYHEADDETAILS.LIST>
       <EXCISEDUTYHEADDETAILS.LIST>       </EXCISEDUTYHEADDETAILS.LIST>
     <RATEDETAILS.LIST>       </RATEDETAILS.LIST>
     <SUMMARYALLOCS.LIST>       </SUMMARYALLOCS.LIST>
     <STPYMTDETAILS.LIST>       </STPYMTDETAILS.LIST>
       <EXCISEPAYMENTALLOCATIONS.LIST>       </EXCISEPAYMENTALLOCATIONS.LIST>
       <TAXBILLALLOCATIONS.LIST>       </TAXBILLALLOCATIONS.LIST>
       <TAXOBJECTALLOCATIONS.LIST>       </TAXOBJECTALLOCATIONS.LIST>
       <TDSEXPENSEALLOCATIONS.LIST>       </TDSEXPENSEALLOCATIONS.LIST>
       <COSTTRACKALLOCATIONS.LIST>       </COSTTRACKALLOCATIONS.LIST>
     <REFVOUCHERDETAILS.LIST>       </REFVOUCHERDETAILS.LIST>
       <INVOICEWISEDETAILS.LIST>       </INVOICEWISEDETAILS.LIST>
     <VATITCDETAILS.LIST>       </VATITCDETAILS.LIST>
     <ADVANCETAXDETAILS.LIST>       </ADVANCETAXDETAILS.LIST>
    </LEDGERENTRIES.LIST>
   `;
    this.xml.push(entry);
  }

  initialize() {
    this.start = `<ENVELOPE>
    <HEADER>
    <TALLYREQUEST>Import Data</TALLYREQUEST>
    </HEADER>
    <BODY>
    <IMPORTDATA>
      <REQUESTDESC>
      <REPORTNAME>All Masters</REPORTNAME>
      <STATICVARIABLES>
        <SVCURRENTCOMPANY>Singhal Pharma - (from 1-Apr-2021)</SVCURRENTCOMPANY>
      </STATICVARIABLES>
      </REQUESTDESC>
      <REQUESTDATA>`;

    this.voucherEnd = `<PAYROLLMODEOFPAYMENT.LIST>      </PAYROLLMODEOFPAYMENT.LIST>
      <ATTDRECORDS.LIST>      </ATTDRECORDS.LIST>
      <GSTEWAYCONSIGNORADDRESS.LIST>      </GSTEWAYCONSIGNORADDRESS.LIST>
      <GSTEWAYCONSIGNEEADDRESS.LIST>      </GSTEWAYCONSIGNEEADDRESS.LIST>
      <TEMPGSTRATEDETAILS.LIST>      </TEMPGSTRATEDETAILS.LIST>
      <UDF:UDFREFERENCEDATE.LIST DESC='UDFReferenceDate' ISLIST='YES' TYPE='Date' NDEX='10000'>
       <UDF:UDFREFERENCEDATE DESC='UDFReferenceDate'>20211001</UDF:UDFREFERENCEDATE>
      </UDF:UDFREFERENCEDATE.LIST>
     </VOUCHER>
     </TALLYMESSAGE>`;

    this.end = `<TALLYMESSAGE xmlns:UDF="TallyUDF">
                <COMPANY>
                <REMOTECMPINFO.LIST MERGE="Yes">
                  <NAME>f46bd38e-307e-4105-8f3b-4856ffc20e3e</NAME>
                  <REMOTECMPNAME>Singhal Pharma - (from 1-Apr-2021)</REMOTECMPNAME>
                  <REMOTECMPSTATE>Uttar Pradesh</REMOTECMPSTATE>
                </REMOTECMPINFO.LIST>
                </COMPANY>
              </TALLYMESSAGE>
              </REQUESTDATA>
             </IMPORTDATA>
            </BODY>
            </ENVELOPE>`;
  }

  onFileChange(ev) {
    let workBook = null;
    let jsonData = null;
    const reader = new FileReader();
    const file = ev.target.files[0];
    reader.onload = (event) => {
      const data = reader.result;
      workBook = XLSX.read(data, { type: 'binary' });
      jsonData = workBook.SheetNames.reduce((initial, name) => {
        const sheet = workBook.Sheets[name];
        initial[name] = XLSX.utils.sheet_to_json(sheet, {
          defval: '',
        });
        return initial;
      }, {});
      this.prepareData(jsonData.sheet1);
      this.totalRecords = jsonData.sheet1.length;
    };
    reader.readAsBinaryString(file);
  }

  download() {
    this.downloadFile('report.xml', this.xml.join(''));
  }

  downloadFile(filename, textInput) {
    var element = document.createElement('a');
    element.setAttribute(
      'href',
      'data:text/plain;charset=utf-8, ' + encodeURIComponent(textInput)
    );
    element.setAttribute('download', filename);
    document.body.appendChild(element);
    element.click();
  }
}
